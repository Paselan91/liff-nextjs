type Post implements Node {
  id: ID!
  user_id: ID!
  user: User!
  image_url: String!
  title: String!
  body: String!
  is_public: Boolean!
  created_at: String!
  updated_at: String!
}

type PostConnection implements Connection {
  pageInfo: PageInfo!
  edges: [PostEdge!]!
  nodes: [Post!]!
}

type PostEdge implements Edge {
  cursor: String!
  node: Post!
}

extend type Query {
  fetchAllPosts(input: PaginationInput!): PostConnection!
  fetchPostById(post_id: Int!): Post! # TODO: post_idはID型にする？
}

extend type Mutation {
  createPost(input: CreatePostInput!): Post!
  updatePost(input: UpdatePostInput!): Post!
  deletePost(post_id: Int!): Boolean! # TODO: post_idはID型にする？
}

input CreatePostInput {
  image_url: String!
  title: String!
  body: String!
  is_public: Boolean!
}

input UpdatePostInput {
  post_id: Int! # TODO: post_idはID型にする？
  image_url: String
  title: String
  body: String
  is_public: Boolean
}
